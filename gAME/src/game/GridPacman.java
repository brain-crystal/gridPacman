/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package game;

import java.awt.Graphics;
import java.awt.Image;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.imageio.ImageIO;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.Timer;

/**
 *
 * @author Ayushi
 */
public class GridPacman extends javax.swing.JFrame implements ActionListener {

    
    /**.
     * Creates new form GridPacman
     */
    JPanel board;
    private Timer timer1;
    public GridPacman() {
        initComponents();
        setFocusable(true);
        //DeskPanel.setVisible(false);
         setSize(28*24+8,28*24+38+12);
         setResizable(true);
        setLocationRelativeTo(null);
        highScore=getHighScore();
        timer1=new Timer(120,this);
        timer1.start();
        
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        if(gameStatus==2)
        {
            gameStatus=0;
            gamePlaying=false;
            if(score>highScore)
            {
                storeScore();
                highScore=getHighScore();
                JOptionPane.showMessageDialog(null,"New High Score: "+highScore,"New HighScore!!", 1);
            }
        }
    }
    void storeScore()
    {
        int sc=0;
        c=ConnectionManager.getConnection();
        String sql="update highscore set score=? where id=1";
        try{
            ps=c.prepareStatement(sql);
            ps.setInt(1, score);
            int n=ps.executeUpdate();
            /*if(rs.next())
            {
                sc=rs.getInt("score");
            }*/
        }catch(Exception e)
        {
           // JOptionPane.showMessageDialog(null,e.getMessage() ,"Error!!", 0);
        }
        
    }
    Connection c=null;
    PreparedStatement ps=null;
    public int getHighScore() {
        int sc=0;
        c=ConnectionManager.getConnection();
        String sql="select * from highscore where id=1";
        try{
            ps=c.prepareStatement(sql);
            ResultSet rs=ps.executeQuery();
            if(rs.next())
            {
                sc=rs.getInt("score");
            }
        }catch(Exception e)
        {
           // JOptionPane.showMessageDialog(null,e.getMessage() ,"Error!!", 0);
        }
        return sc;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        new_game_mn_itm = new javax.swing.JMenuItem();
        restart_mn_itm = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        exit_mn_itm = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        help_mn_itm = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Grid Pacman");

        jMenu1.setText("Game");

        new_game_mn_itm.setText("New Game");
        new_game_mn_itm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                new_game_mn_itmActionPerformed(evt);
            }
        });
        jMenu1.add(new_game_mn_itm);

        restart_mn_itm.setText("Restart Game");
        restart_mn_itm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                restart_mn_itmActionPerformed(evt);
            }
        });
        jMenu1.add(restart_mn_itm);

        jMenuItem3.setText("High Score");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem3);

        exit_mn_itm.setText("Exit");
        exit_mn_itm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exit_mn_itmActionPerformed(evt);
            }
        });
        jMenu1.add(exit_mn_itm);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Help");

        help_mn_itm.setText("How to play");
        help_mn_itm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                help_mn_itmActionPerformed(evt);
            }
        });
        jMenu2.add(help_mn_itm);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 689, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 713, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void restart_mn_itmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_restart_mn_itmActionPerformed
        // TODO add your handling code here:
        if(gamePlaying)
        {
            //gamePlaying=false;
            remove(board);
            board=new PacBoard();
            add(board);
            board.requestFocus();
            gameStatus=1;
            gamePlaying=true;
        }
    }//GEN-LAST:event_restart_mn_itmActionPerformed

    private void exit_mn_itmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exit_mn_itmActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_exit_mn_itmActionPerformed

    private void new_game_mn_itmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_new_game_mn_itmActionPerformed
        // TODO add your handling code here:
        if(!gamePlaying)
        {
            gameStatus=1;
            gamePlaying=true;
            if(board!=null)
            {
                remove(board);
                board=null;
            }
            board=new PacBoard();
            add(board);
            board.requestFocus();
            score=0;
        }
    }//GEN-LAST:event_new_game_mn_itmActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        // TODO add your handling code here:
        int sc=0;
        c=ConnectionManager.getConnection();
        String sql="select * from highscore where id=1";
        try{
            ps=c.prepareStatement(sql);
            ResultSet rs=ps.executeQuery();
            if(rs.next())
            {
                sc=rs.getInt("score");
                JOptionPane.showMessageDialog(null,"High Score: "+sc,"High Score!!",1);
            }
            else
            {
                JOptionPane.showMessageDialog(null,"High Score: "+sc,"High Score!!",1);
            }
        }catch(Exception e)
        {
            JOptionPane.showMessageDialog(null,e.getMessage() ,"Error!!", 0);
        }
      
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void help_mn_itmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_help_mn_itmActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(null,"Move pacman using arrow keys and avoid collision with ghosts.\nTry to eat more and more number of dots for good scores.\nGood Luck!!", "Help!!",1);
    }//GEN-LAST:event_help_mn_itmActionPerformed
    static int gameStatus=0;
    static boolean gamePlaying;
    static int score;
    int highScore;
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GridPacman.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GridPacman.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GridPacman.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GridPacman.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GridPacman().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem exit_mn_itm;
    private javax.swing.JMenuItem help_mn_itm;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem new_game_mn_itm;
    private javax.swing.JMenuItem restart_mn_itm;
    // End of variables declaration//GEN-END:variables
}
